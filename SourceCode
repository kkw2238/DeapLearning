import tensorflow as tf

"""
  Linear Regression 실습 
  H(x) = Wx + b
"""

sess = tf.Session()

# 1. 그래프 생성

# X 와 Y 데이터
x_train = [1, 2, 3]
y_train = [1, 2, 3]

# Variable = tensorflow가 자체적으로 변경 시키는 값
# tf.random_normal([차원]) 
W = tf.Variable(tf.random_normal([1]), name = 'weight')
b = tf.Variable(tf.random_normal([1]), name = 'bias')

hypothesis = x_train * W + b

# cost( W, b ) 
# reduce_mean = 입력된 데이터들에 대한 평균을 내주는 함수
cost = tf.reduce_mean(tf.square(hypothesis - y_train))

# Cost를 최소화
optimizer = tf.train.GradientDescentOptimizer(learning_rate = 0.01)
train = optimizer.minimize(cost)

# 2. 그래프 실행 및 업데이트 & 데이터 출력
sess.run(tf.global_variables_initializer())

for step in range(2001) :
  sess.run(train)
  if step % 100 == 0:
    print("[ " + str(step) + " ] " + '번째 시도 \t 비용 : ' + str(sess.run(cost)) + '\t W : ' + str(sess.run(W)) + ' \t b : ' + str(sess.run(b)))
